{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Milan\\\\Beotura\\\\frontend\\\\pages\\\\locationsScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { descriptionStoreContext } from \"../states/descriptionScreenState\";\nimport axios from \"axios\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ListItem from \"../components/listItem\";\nimport DetailsScreen from \"../components/detailsScreen\";\nvar Tours = observer(function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios(\"http://192.168.1.5:8000/api/places\"));\n\n            case 2:\n              result = _context.sent;\n              setMasterDataSource(result.data);\n              setFilteredDataSource(result.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : \"\".toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var detailStore = useContext(descriptionStoreContext);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"View locations:\")), React.createElement(TextInput, {\n    style: {\n      height: 30,\n      borderColor: \"#6c757d\",\n      borderWidth: 1,\n      marginTop: 25,\n      marginBottom: 20,\n      width: Dimensions.get(\"window\").width * 0.6,\n      borderRadius: 25,\n      paddingLeft: 20\n    },\n    onChangeText: function onChangeText(text) {\n      return searchFilterFunction(text);\n    },\n    placeholder: \"Search\",\n    value: search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.listContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: filteredDataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.id_field.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"DetailsScreen\");\n          detailStore.title = item.title;\n          detailStore.desc = item.description;\n          detailStore.image = item.image;\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, React.createElement(ListItem, {\n        title: item.title,\n        desc: \"\",\n        image: item.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      })));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n});\nvar Stack = createStackNavigator();\nexport default function StackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Tours\",\n    component: Tours,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"DetailsScreen\",\n    component: DetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#f3f3f3\",\n    paddingTop: 30\n  },\n  titleContainer: {\n    alignSelf: \"center\"\n  },\n  title: {\n    paddingTop: 20,\n    fontSize: 24,\n    color: \"black\"\n  },\n  listContainer: {\n    flex: 1,\n    color: \"black\"\n  },\n  textInput: {\n    color: \"gray\",\n    height: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Milan/Beotura/frontend/pages/locationsScreen.js"],"names":["React","useState","useEffect","useContext","observer","descriptionStoreContext","axios","createStackNavigator","ListItem","DetailsScreen","Tours","navigation","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","fetchData","result","data","searchFilterFunction","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","detailStore","styles","container","titleContainer","height","borderColor","borderWidth","marginTop","marginBottom","width","Dimensions","get","borderRadius","paddingLeft","listContainer","id_field","toString","navigate","desc","description","image","Stack","StackNavigator","headerShown","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","paddingTop","alignSelf","fontSize","color","textInput"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { descriptionStoreContext } from \"../states/descriptionScreenState\";\r\nimport axios from \"axios\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  TextInput,\r\n  Dimensions,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport ListItem from \"../components/listItem\";\r\nimport DetailsScreen from \"../components/detailsScreen\";\r\n\r\nconst Tours = observer(({ navigation }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filteredDataSource, setFilteredDataSource] = useState();\r\n  const [masterDataSource, setMasterDataSource] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\"http://192.168.1.5:8000/api/places\");\r\n      setMasterDataSource(result.data);\r\n      setFilteredDataSource(result.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  // https://blog.jscrambler.com/add-a-search-bar-using-hooks-and-flatlist-in-react-native/ Code za search bar sa activity indicatorom i cool je pogledaj\r\n  const searchFilterFunction = (text) => {\r\n    if (text) {\r\n      const newData = masterDataSource.filter(function (item) {\r\n        const itemData = item.title\r\n          ? item.title.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return itemData.indexOf(textData) > -1;\r\n      });\r\n      setFilteredDataSource(newData);\r\n      setSearch(text);\r\n    } else {\r\n      setFilteredDataSource(masterDataSource);\r\n      setSearch(text);\r\n    }\r\n  };\r\n  const detailStore = useContext(descriptionStoreContext);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.titleContainer}>\r\n        <Text style={styles.title}>View locations:</Text>\r\n      </View>\r\n\r\n      <TextInput\r\n        style={{\r\n          height: 30,\r\n          borderColor: \"#6c757d\",\r\n          borderWidth: 1,\r\n          marginTop: 25,\r\n          marginBottom: 20,\r\n          width: Dimensions.get(\"window\").width * 0.6,\r\n          borderRadius: 25,\r\n          paddingLeft: 20,\r\n        }}\r\n        onChangeText={(text) => searchFilterFunction(text)}\r\n        placeholder={\"Search\"}\r\n        value={search}\r\n      />\r\n      <View style={styles.listContainer}>\r\n        <FlatList\r\n          data={filteredDataSource}\r\n          keyExtractor={(item) => item.id_field.toString()}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"DetailsScreen\");\r\n                  detailStore.title = item.title;\r\n                  detailStore.desc = item.description;\r\n                  detailStore.image = item.image;\r\n                }}\r\n              >\r\n                <ListItem title={item.title} desc={\"\"} image={item.image} />\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst Stack = createStackNavigator();\r\nexport default function StackNavigator() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Tours\" component={Tours} />\r\n      <Stack.Screen name=\"DetailsScreen\" component={DetailsScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#f3f3f3\",\r\n    paddingTop: 30,\r\n  },\r\n  titleContainer: {\r\n    alignSelf: \"center\",\r\n  },\r\n  title: {\r\n    paddingTop: 20,\r\n    fontSize: 24,\r\n    color: \"black\",\r\n  },\r\n  listContainer: {\r\n    flex: 1,\r\n    color: \"black\",\r\n  },\r\n  textInput: {\r\n    color: \"gray\",\r\n    height: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
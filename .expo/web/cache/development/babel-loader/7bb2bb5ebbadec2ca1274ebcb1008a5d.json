{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Milan\\\\Beotura\\\\frontend\\\\components\\\\searchBar.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport default function searchBar() {\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredDataSource = _useState2[0],\n      setFilteredDataSource = _useState2[1];\n\n  var _useState3 = useState(data),\n      _useState4 = _slicedToArray(_useState3, 2),\n      masterDataSource = _useState4[0],\n      setMasterDataSource = _useState4[1];\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : \"\".toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 30,\n      borderColor: \"#6c757d\",\n      borderWidth: 1,\n      marginTop: 25,\n      marginBottom: 20,\n      width: Dimensions.get(\"window\").width * 0.6,\n      borderRadius: 25,\n      paddingLeft: 20\n    },\n    onChangeText: function onChangeText(text) {\n      return searchFilterFunction(text);\n    },\n    placeholder: \"Search\",\n    value: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Milan/Beotura/frontend/components/searchBar.js"],"names":["React","useState","searchBar","data","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","searchFilterFunction","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","setSearch","height","borderColor","borderWidth","marginTop","marginBottom","width","Dimensions","get","borderRadius","paddingLeft","search"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAClC,kBAAoDD,QAAQ,CAACE,IAAD,CAA5D;AAAA;AAAA,MAAOC,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,mBAAgDJ,QAAQ,CAACE,IAAD,CAAxD;AAAA;AAAA,MAAOG,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAU;AACrC,QAAIA,IAAJ,EAAU;AACR,UAAMC,OAAO,GAAGJ,gBAAgB,CAACK,MAAjB,CAAwB,UAAUC,IAAV,EAAgB;AACtD,YAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAL,GACbF,IAAI,CAACE,KAAL,CAAWC,WAAX,EADa,GAEb,GAAGA,WAAH,EAFJ;AAGA,YAAMC,QAAQ,GAAGP,IAAI,CAACM,WAAL,EAAjB;AACA,eAAOF,QAAQ,CAACI,OAAT,CAAiBD,QAAjB,IAA6B,CAAC,CAArC;AACD,OANe,CAAhB;AAOAX,MAAAA,qBAAqB,CAACK,OAAD,CAArB;AACAQ,MAAAA,SAAS,CAACT,IAAD,CAAT;AACD,KAVD,MAUO;AACLJ,MAAAA,qBAAqB,CAACC,gBAAD,CAArB;AACAY,MAAAA,SAAS,CAACT,IAAD,CAAT;AACD;AACF,GAfD;;AAiBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLU,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,WAAW,EAAE,SAFR;AAGLC,MAAAA,WAAW,EAAE,CAHR;AAILC,MAAAA,SAAS,EAAE,EAJN;AAKLC,MAAAA,YAAY,EAAE,EALT;AAMLC,MAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,GANnC;AAOLG,MAAAA,YAAY,EAAE,EAPT;AAQLC,MAAAA,WAAW,EAAE;AARR,KADT;AAWE,IAAA,YAAY,EAAE,sBAACnB,IAAD;AAAA,aAAUD,oBAAoB,CAACC,IAAD,CAA9B;AAAA,KAXhB;AAYE,IAAA,WAAW,EAAE,QAZf;AAaE,IAAA,KAAK,EAAEoB,MAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAmBD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\n\r\nexport default function searchBar() {\r\n  const [filteredDataSource, setFilteredDataSource] = useState(data);\r\n  const [masterDataSource, setMasterDataSource] = useState(data);\r\n\r\n  const searchFilterFunction = (text) => {\r\n    if (text) {\r\n      const newData = masterDataSource.filter(function (item) {\r\n        const itemData = item.title\r\n          ? item.title.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return itemData.indexOf(textData) > -1;\r\n      });\r\n      setFilteredDataSource(newData);\r\n      setSearch(text);\r\n    } else {\r\n      setFilteredDataSource(masterDataSource);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput\r\n        style={{\r\n          height: 30,\r\n          borderColor: \"#6c757d\",\r\n          borderWidth: 1,\r\n          marginTop: 25,\r\n          marginBottom: 20,\r\n          width: Dimensions.get(\"window\").width * 0.6,\r\n          borderRadius: 25,\r\n          paddingLeft: 20,\r\n        }}\r\n        onChangeText={(text) => searchFilterFunction(text)}\r\n        placeholder={\"Search\"}\r\n        value={search}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}